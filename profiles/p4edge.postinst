#!/bin/sh
systemctl enable p4edge-web

pip3 install meson pyelftools pybind11 pysimdjson ipaddr scapy dill setuptools backtrace ipdb termcolor colored pyyaml ujson ruamel.yaml p4runtime-shell

git clone --recursive https://github.com/p4edge/t4p4s /root/t4p4s

git clone -b v1.37.0 --recursive --shallow-submodules --depth=1 https://github.com/grpc/grpc /root/grpc
mkdir /root/PI && cd /root/PI
git init
git remote add origin https://github.com/p4lang/PI
git fetch --depth 1 origin a5fd855d4b3293e23816ef6154e83dc6621aed6a
git checkout FETCH_HEAD
git submodule update --init --recursive --depth=1
git clone --depth=1 https://github.com/P4ELTE/P4Runtime_GRPCPP /root/P4Runtime_GRPCPP
cd /root/P4Runtime_GRPCPP
./install.sh
./compile.sh

cat << EOT >>/etc/bash.bashrc

# T4P4S env variables
export P4PI=/root/PI
export GRPCPP=/root/P4Runtime_GRPCPP
export GRPC=/root/grpc
EOT

cat >/lib/systemd/system/t4p4s.service <<EOF
[Unit]
Description=T4P4S Switch
After=p4edge-setup.service

[Service]
Type=simple
ExecStart=/usr/bin/t4p4s-start
WorkingDirectory=/root/t4p4s
Restart=on-failure
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

chmod 644 /lib/systemd/system/t4p4s.service

cat >/usr/bin/t4p4s-start <<EOF
#!/bin/bash

export P4PI=/root/PI
export GRPCPP=/root/P4Runtime_GRPCPP
export GRPC=/root/grpc

P4_PROG=l2switch
T4P4S_PROG_FILE=/root/t4p4s-switch
if [ -f "${T4P4S_PROG_FILE}" ]; then
    P4_PROG=$(cat "${T4P4S_PROG_FILE}")
else
    echo "${P4_PROG}" > "${T4P4S_PROG_FILE}"
fi

/root/t4p4s/t4p4s.sh :"${P4_PROG}" p4rt
EOF

chmod 644 /usr/bin/t4p4s-start

cat >/usr/bin/t4p4s-p4rtshell <<EOF
#!/bin/bash

if [ -z $1 ]
then
	echo "Missing commandline argument!"
	echo "Usage: ./$0 <p4-program-name>"
	echo "Example: ./$0 l2switch"
	exit -1
fi

DEFAULT_PROG=$1
T4P4SDIR="/root/t4p4s"
P4RTDIR="${T4P4SDIR}/examples/p4rt_files"


if [ ! -f "${T4P4SDIR}/examples/${DEFAULT_PROG}.p4" ]
then
	echo "P4 source file does not exist."
	echo "Missing file: ${T4P4SDIR}/examples/${DEFAULT_PROG}.p4"
	exit 1
fi

echo "Generating P4Runtime files..."

if [ ! -d "$P4RTDIR" ]
then
	echo "Creating the directory for P4Runtime files: $P4RTDIR"
	mkdir $P4RTDIR
fi

pushd ${P4RTDIR}
p4c-bm2-ss --p4runtime-files "${DEFAULT_PROG}.p4runtime.txt" --toJSON "${DEFAULT_PROG}.json" "${T4P4SDIR}/examples/${DEFAULT_PROG}.p4"
popd

echo "Launching P4Runtime-shell..."
python3.9 -m p4runtime_sh --grpc-addr localhost:50051 --device-id 1 --election-id 0,1 --config "${P4RTDIR}/${DEFAULT_PROG}.p4runtime.txt,${P4RTDIR}/${DEFAULT_PROG}.json"
EOF

chmod 644 /usr/bin/t4p4s-start

ln -s /usr/share/p4edge/t4p4s /root/t4p4s/examples/p4edge

systemctl enable t4p4s
